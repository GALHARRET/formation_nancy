[
  {
    "objectID": "np.html",
    "href": "np.html",
    "title": "Tests non paramétriques",
    "section": "",
    "text": "Indice de dispersion non paramétrique\nLe diaporama sur les tests non paramétriques :\nOn définit le MAD (Median Absolute Deviation) qui peut être vu comme un équivalent non paramétrique à \\(\\sigma\\).\n\\[\nMAD=\\text{median}|X_i-\\widetilde X|.\n\\] Donc pour \\(X\\sim \\mathcal N(\\mu,\\sigma)\\) on a par définition \\(P(|X-\\mu|&lt;MAD)=0.5\\) ce qui donne \\(P(|Z|&lt;\\frac{MAD}{\\sigma})=0.5\\) où \\(Z\\sim \\mathcal N(0,1)\\) et donc \\(\\frac{MAD}{\\sigma}=\\Phi^{-1}(\\frac{3}{4}).\\)",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "bayes.html",
    "href": "bayes.html",
    "title": "Statistique bayésienne",
    "section": "",
    "text": "Le diaporama :\n\n\n\nSlides\n\n\n\nTest de student sur groupes indépendants\n\nlibrary(coin)\n\nLoading required package: survival\n\ndata(\"neuropathy\")\nlibrary(BayesFactor)\n\nLoading required package: coda\n\n\nLoading required package: Matrix\n\n\n************\nWelcome to BayesFactor 0.9.12-4.7. If you have questions, please contact Richard Morey (richarddmorey@gmail.com).\n\nType BFManual() to open the manual.\n************\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:kableExtra':\n\n    group_rows\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nx=neuropathy |&gt;\n  filter(group==\"control\") |&gt; \n  select(pain) |&gt;\n  unlist()\ny=neuropathy |&gt;\n  filter(group==\"treat\") |&gt; \n  select(pain) |&gt;\n  unlist()\nttestBF(x,y,rscale=1)\n\nBayes factor analysis\n--------------\n[1] Alt., r=1 : 0.4360155 ±0.02%\n\nAgainst denominator:\n  Null, mu1-mu2 = 0 \n---\nBayes factor type: BFindepSample, JZS\n\n# La loi a posteriori de la différence des moyennes\nsamples = ttestBF(x,y,posterior = TRUE, iterations = 10000)\nplot(samples[,\"mu\"])\n\n\n\n\n\n\n\n\n\nUn autre exemple :\n\ndata(\"mercuryfish\")\n\nOn s’interesse aux trois questions suivantes :\n\nLe taux de mercure présent dans le sang est-il significativement supérieur chez le groupe exposé ?\nLa proportion de cellules avec des anomalies structurales est-elle significativement supérieure chez le groupe exposé ?\n\n\n\n\nTest de student sur groupes appariés\nL’argument paired=T permet de faire des tests sur groupes appariés :\n\nlibrary(carData)\ndata(\"OBrienKaiserLong\")\ndata=OBrienKaiserLong |&gt;\n  filter(phase %in% c(\"pre\",\"post\")) |&gt;\n  select(score,phase)\n\nFaire le test Bayésien de Student :\n\n\nShow the code\nx=data |&gt;\n  filter(phase==\"pre\") |&gt;\n  select(score) |&gt;\n  unlist()\n\ny=data |&gt;\n  filter(phase==\"post\") |&gt;\n  select(score) |&gt;\n  unlist()\n\nttestBF(x,y,paired=T,rscale=1)\n\n\nBayes factor analysis\n--------------\n[1] Alt., r=1 : 81325.58 ±0%\n\nAgainst denominator:\n  Null, mu = 0 \n---\nBayes factor type: BFoneSample, JZS\n\n\nShow the code\n# La loi a posteriori de la différence des moyennes\nsamples = ttestBF(x,y,paired=T,posterior = TRUE, iterations = 10000)\nplot(samples[,\"mu\"])\n\n\n\n\n\n\n\n\n\n\n\nRégression linéaire Bayésienne\nPour calculer les facteurs de Bayes :\n\ndata(\"attitude\")\nres = regressionBF(rating ~ ., data = attitude, progress=TRUE)\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  21%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |======================================================================| 100%\n\nhead(res)\n\nBayes factor analysis\n--------------\n[1] complaints                      : 417938.6 ±0.01%\n[2] complaints + learning           : 207271.9 ±0%\n[3] complaints + learning + advance : 88041.54 ±0%\n[4] complaints + raises             : 77498.99 ±0%\n[5] complaints + privileges         : 75015.23 ±0%\n[6] complaints + advance            : 72759.76 ±0%\n\nAgainst denominator:\n  Intercept only \n---\nBayes factor type: BFlinearModel, JZS\n\nhead(res/res[length(res)])\n\nBayes factor analysis\n--------------\n[1] complaints                      : 188.949  ±0.01%\n[2] complaints + learning           : 93.70711 ±0%\n[3] complaints + learning + advance : 39.80336 ±0%\n[4] complaints + raises             : 35.0371  ±0%\n[5] complaints + privileges         : 33.9142  ±0%\n[6] complaints + advance            : 32.89451 ±0%\n\nAgainst denominator:\n  rating ~ complaints + privileges + learning + raises + critical + advance \n---\nBayes factor type: BFlinearModel, JZS\n\n\nPour calculer les coefficients du modèle :\n\nlibrary(rstanarm)\n\nLoading required package: Rcpp\n\n\nThis is rstanarm version 2.32.1\n\n\n- See https://mc-stan.org/rstanarm/articles/priors for changes to default priors!\n\n\n- Default priors may change, so it's safest to specify priors, even if equivalent to the defaults.\n\n\n- For execution on a local, multicore CPU with excess RAM we recommend calling\n\n\n  options(mc.cores = parallel::detectCores())\n\nmodel_bayes &lt;- stan_glm(rating ~ ., data = attitude, seed=44)\n\n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 0.000653 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 6.53 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 1: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 0.059 seconds (Warm-up)\nChain 1:                0.051 seconds (Sampling)\nChain 1:                0.11 seconds (Total)\nChain 1: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 2.7e-05 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.27 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 2: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 0.065 seconds (Warm-up)\nChain 2:                0.043 seconds (Sampling)\nChain 2:                0.108 seconds (Total)\nChain 2: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 6e-06 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 3: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 0.063 seconds (Warm-up)\nChain 3:                0.052 seconds (Sampling)\nChain 3:                0.115 seconds (Total)\nChain 3: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 8e-06 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.08 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 4: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 0.075 seconds (Warm-up)\nChain 4:                0.049 seconds (Sampling)\nChain 4:                0.124 seconds (Total)\nChain 4: \n\nprint(model_bayes, digits = 3)\n\nstan_glm\n family:       gaussian [identity]\n formula:      rating ~ .\n observations: 30\n predictors:   7\n------\n            Median MAD_SD\n(Intercept) 11.029 11.762\ncomplaints   0.615  0.164\nprivileges  -0.069  0.140\nlearning     0.312  0.173\nraises       0.082  0.224\ncritical     0.037  0.151\nadvance     -0.216  0.185\n\nAuxiliary parameter(s):\n      Median MAD_SD\nsigma 7.231  1.106 \n\n------\n* For help interpreting the printed output see ?print.stanreg\n* For info on the priors used see ?prior_summary.stanreg\n\nlibrary(bayesplot)\n\nThis is bayesplot version 1.11.1\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nmcmc_dens(model_bayes, pars = c(\"complaints\"))\n\n\n\n\n\n\n\nlibrary(bayestestR)\nhdi(model_bayes)\n\nHighest Density Interval\n\nParameter   |         95% HDI\n-----------------------------\n(Intercept) | [-13.50, 34.39]\ncomplaints  | [  0.30,  0.95]\nprivileges  | [ -0.34,  0.22]\nlearning    | [ -0.03,  0.67]\nraises      | [ -0.37,  0.53]\ncritical    | [ -0.26,  0.33]\nadvance     | [ -0.58,  0.16]\n\ndescribe_posterior(model_bayes)\n\nSummary of Posterior Distribution\n\nParameter   | Median |          95% CI |     pd |          ROPE | % in ROPE\n---------------------------------------------------------------------------\n(Intercept) |  11.03 | [-13.49, 34.40] | 82.23% | [-1.22, 1.22] |     6.05%\ncomplaints  |   0.61 | [  0.28,  0.94] | 99.98% | [-1.22, 1.22] |      100%\nprivileges  |  -0.07 | [ -0.35,  0.21] | 68.85% | [-1.22, 1.22] |      100%\nlearning    |   0.31 | [ -0.04,  0.66] | 95.80% | [-1.22, 1.22] |      100%\nraises      |   0.08 | [ -0.36,  0.55] | 64.42% | [-1.22, 1.22] |      100%\ncritical    |   0.04 | [ -0.27,  0.33] | 59.65% | [-1.22, 1.22] |      100%\nadvance     |  -0.22 | [ -0.57,  0.17] | 87.30% | [-1.22, 1.22] |      100%\n\nParameter   |  Rhat |     ESS\n-----------------------------\n(Intercept) | 0.999 | 4547.00\ncomplaints  | 1.001 | 2754.00\nprivileges  | 1.000 | 3788.00\nlearning    | 1.000 | 3323.00\nraises      | 1.001 | 3102.00\ncritical    | 1.000 | 4329.00\nadvance     | 1.002 | 2800.00",
    "crumbs": [
      "Statistique bayésienne"
    ]
  },
  {
    "objectID": "np.html#les-tests-paramétriques",
    "href": "np.html#les-tests-paramétriques",
    "title": "Tests non paramétriques",
    "section": "Les tests paramétriques",
    "text": "Les tests paramétriques\n\nt.test(x,y)\n\n\n    Welch Two Sample t-test\n\ndata:  x and y\nt = -1.3094, df = 46.051, p-value = 0.1969\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.5850265  0.1238742\nsample estimates:\nmean of x mean of y \n0.1995667 0.4301429 \n\nlibrary(robnptests)\ntrimmed_test(x,y)\n\n\n    Randomization test based on trimmed means (1000 random permutations)\n\ndata:  x and y\ntrimmed t = -1.3775, df = 34, p-value = 0.1648\nalternative hypothesis: true location shift is not equal to 0\nsample estimates:\nTrimmed mean of x Trimmed mean of y \n        0.1320000         0.3602778",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#les-tests-sur-les-paramètres-de-position",
    "href": "np.html#les-tests-sur-les-paramètres-de-position",
    "title": "Tests non paramétriques",
    "section": "Les tests sur les paramètres de position",
    "text": "Les tests sur les paramètres de position\nOn regarde tout d’abord les tests paramétriques :\n\n# Student\nt.test(x,y,var.equal=T)\n\n\n    Two Sample t-test\n\ndata:  x and y\nt = -1.3279, df = 56, p-value = 0.1896\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.5784146  0.1172622\nsample estimates:\nmean of x mean of y \n0.1995667 0.4301429 \n\n# Welch\nt.test(x,y,var.equal=F)\n\n\n    Welch Two Sample t-test\n\ndata:  x and y\nt = -1.3094, df = 46.051, p-value = 0.1969\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.5850265  0.1238742\nsample estimates:\nmean of x mean of y \n0.1995667 0.4301429 \n\n# test de Yuen\nlibrary(robnptests)\n\nPuis les tests non paramétriques :\n\n# Test de Mann-Withney\nwilcox.test(x,y)\n\nWarning in wilcox.test.default(x, y): cannot compute exact p-value with ties\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  x and y\nW = 357, p-value = 0.3301\nalternative hypothesis: true location shift is not equal to 0\n\ntrimmed_test(x,y)\n\n\n    Randomization test based on trimmed means (1000 random permutations)\n\ndata:  x and y\ntrimmed t = -1.3775, df = 34, p-value = 0.1588\nalternative hypothesis: true location shift is not equal to 0\nsample estimates:\nTrimmed mean of x Trimmed mean of y \n        0.1320000         0.3602778 \n\n# Test de Behrens-Fisher\nlibrary(npsm)\n\nLoading required package: Rfit\n\nfp.test(x,y)\n\nstatistic =  0.9124277 , p-value =  0.3653668 \n\n# Test de permutation\nlibrary(coin)\noneway_test(pain~group,data=neuropathy)\n\n\n    Asymptotic Two-Sample Fisher-Pitman Permutation Test\n\ndata:  pain by group (control, treat)\nZ = -1.3191, p-value = 0.1871\nalternative hypothesis: true mu is not equal to 0\n\n# Test de Brunner-Manzel\nlibrary(brunnermunzel)\nbrunnermunzel.test(x,y)\n\n\n    Brunner-Munzel Test\n\ndata:  x and y\nBrunner-Munzel Test Statistic = 0.94424, df = 41.597, p-value = 0.3505\n95 percent confidence interval:\n 0.4146606 0.7353394\nsample estimates:\nP(X&lt;Y)+.5*P(X=Y) \n           0.575",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#les-tests-sur-les-paramètres-déchelle",
    "href": "np.html#les-tests-sur-les-paramètres-déchelle",
    "title": "Tests non paramétriques",
    "section": "Les tests sur les paramètres d’échelle",
    "text": "Les tests sur les paramètres d’échelle\n\n# Test de Levene\nlibrary(car)\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:Rfit':\n\n    subsets\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nleveneTest(pain~group,data=neuropathy)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value  Pr(&gt;F)  \ngroup  1  4.4733 0.03889 *\n      56                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Test de Fligner-Killeen\nfk.test(x,y)\n\nstatistic =  2.193009 , p-value =  0.02830674 \n95  percent confidence interval:\n0.8423731 4.273328 \nEstimate: 1.897297 \n\n\n\nRépondre aux questions suivantes :\n\nQue pensez-vous de ces résultats ?\nQuel test vous paraît le plus adapté compte tenu des données considérées ?\n\n\n\nUn autre exemple :\n\ndata(\"mercuryfish\")\n\nOn s’interesse aux trois questions suivantes :\n\nLe taux de mercure présent dans le sang est-il significativement supérieur chez le groupe exposé ?\nLa proportion de cellules avec des anomalies structurales est-elle significativement supérieure chez le groupe exposé ?",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#exercice",
    "href": "np.html#exercice",
    "title": "Tests non paramétriques",
    "section": "Exercice :",
    "text": "Exercice :\n\ndata(\"Baumann\")\ncolnames(Baumann)\n\n[1] \"group\"       \"pretest.1\"   \"pretest.2\"   \"post.test.1\" \"post.test.2\"\n[6] \"post.test.3\"\n\ndata=data.frame(\n  result=c(Baumann$pretest.1,Baumann$post.test.1),\n  group=rep(Baumann$group,2),\n  test=c(rep(\"pre\",nrow(Baumann)),\n         rep(\"post\",nrow(Baumann))),\n  id=rep(1:nrow(Baumann),2))\nggplot(data,aes(x=group,y=result,color=test))+\n  geom_boxplot()\n\n\n\n\n\n\n\nlibrary(lmerTest)\n\nLoading required package: lme4\n\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'lmerTest'\n\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\n\nThe following object is masked from 'package:stats':\n\n    step\n\nmod=lmer(result~group:test-1+(1|id),data=data)\nmod1=summary(mod)                 \nmoy=mod1$coefficients[,\"Estimate\"]\ncomparaisons=cbind(diag(1,3),diag(-1,3))\nM=comparaisons%*%moy\nES=sqrt(diag(comparaisons%*%mod1$vcov%*%t(comparaisons)))\nM/ES\n\n            [,1]\n[1,] -6.94170860\n[2,]  0.08263939\n[3,] -2.47918164\n\nlibrary(lmPerm)\nmod=aovp(result~group*test-1+Error(id),data=data)\n\n[1] \"Settings:  unique SS \"\n\nmod$Within$coefficients\n\n  groupBasal    groupDRTA   groupStrat        test1 group1:test1 group2:test1 \n   8.9274892   10.7304724   10.0789102   -0.8560606   -1.0530303    0.8787879 \n\nmod$Within$qr\n\n$qr\n     groupBasal     groupDRTA    groupStrat         test1 group#1:test1\n2   -6.53406258  5.822582e-01  9.646367e-01 -7.229782e-16 -7.229782e-16\n3    0.15082713 -5.707738e+00  3.315249e+00 -5.714322e-16  2.133108e-16\n4    0.15008812  8.380915e-03 -1.288330e+00  1.133139e-15  1.012982e-15\n5    0.14934912  6.999432e-03  6.871529e-02  1.148913e+01 -5.981765e-16\n6    0.14861011  5.617950e-03  5.515291e-02  7.047413e-02  9.380832e+00\n7    0.14787111  4.236467e-03  4.159053e-02  7.136790e-02  8.172127e-02\n8    0.14713211  2.854985e-03  2.802815e-02  7.226167e-02  8.274470e-02\n9    0.14639310  1.473502e-03  1.446576e-02  7.315544e-02  8.376813e-02\n10   0.14565410  9.201967e-05  9.033816e-04  7.404921e-02  8.479156e-02\n11   0.14491509 -1.289463e-03 -1.265900e-02  7.494298e-02  8.581499e-02\n12   0.14417609 -2.670945e-03 -2.622138e-02  7.583675e-02  8.683842e-02\n13   0.14343708 -4.052428e-03 -3.978377e-02  7.673052e-02  8.786185e-02\n14   0.14269808 -5.433911e-03 -5.334615e-02  7.762429e-02  8.888528e-02\n15   0.14195907 -6.815393e-03 -6.690853e-02  7.851806e-02  8.990871e-02\n16   0.14122007 -8.196876e-03 -8.047091e-02  7.941183e-02  9.093214e-02\n17   0.14048107 -9.578358e-03 -9.403330e-02  8.030560e-02  9.195557e-02\n18   0.13974206 -1.095984e-02 -1.075957e-01  8.119937e-02  9.297900e-02\n19   0.13900306 -1.234132e-02 -1.211581e-01  8.209314e-02  9.400243e-02\n20   0.13826405 -1.372281e-02 -1.347204e-01  8.298691e-02  9.502586e-02\n21   0.13752505 -1.510429e-02 -1.482828e-01  8.388068e-02  9.604929e-02\n22   0.13678604 -1.648577e-02 -1.618452e-01  8.477445e-02  9.707272e-02\n23  -0.01699710  1.434267e-01  1.221167e-01  6.475135e-02 -3.245550e-02\n24  -0.01773611  1.420452e-01  1.085543e-01  6.564512e-02 -3.143207e-02\n25  -0.01847511  1.406637e-01  9.499189e-02  6.653889e-02 -3.040864e-02\n26  -0.01921412  1.392822e-01  8.142951e-02  6.743266e-02 -2.938521e-02\n27  -0.01995312  1.379007e-01  6.786712e-02  6.832643e-02 -2.836178e-02\n28  -0.02069213  1.365193e-01  5.430474e-02  6.922020e-02 -2.733835e-02\n29  -0.02143113  1.351378e-01  4.074236e-02  7.011397e-02 -2.631492e-02\n30  -0.02217013  1.337563e-01  2.717998e-02  7.100774e-02 -2.529149e-02\n31  -0.02290914  1.323748e-01  1.361759e-02  7.190151e-02 -2.426806e-02\n32  -0.02364814  1.309933e-01  5.521131e-05  7.279528e-02 -2.324463e-02\n33  -0.02438715  1.296118e-01 -1.350717e-02  7.368905e-02 -2.222120e-02\n34  -0.02512615  1.282304e-01 -2.706955e-02  7.458282e-02 -2.119777e-02\n35  -0.02586516  1.268489e-01 -4.063194e-02  7.547659e-02 -2.017434e-02\n36  -0.02660416  1.254674e-01 -5.419432e-02  7.637036e-02 -1.915091e-02\n37  -0.02734317  1.240859e-01 -6.775670e-02  7.726413e-02 -1.812748e-02\n38  -0.02808217  1.227044e-01 -8.131908e-02  7.815790e-02 -1.710405e-02\n39  -0.02882118  1.213229e-01 -9.488147e-02  7.905167e-02 -1.608062e-02\n40  -0.02956018  1.199415e-01 -1.084438e-01  7.994544e-02 -1.505719e-02\n41  -0.03029918  1.185600e-01 -1.220062e-01  8.083921e-02 -1.403376e-02\n42  -0.03103819  1.171785e-01 -1.355686e-01  8.173298e-02 -1.301033e-02\n43  -0.03177719  1.157970e-01 -1.491310e-01  8.262675e-02 -1.198690e-02\n44  -0.03251620  1.144155e-01 -1.626934e-01  8.352052e-02 -1.096347e-02\n45  -0.03325520 -6.216671e-02  1.658915e-01  7.394405e-02 -1.285296e-01\n46  -0.03399421 -6.354820e-02  1.523291e-01  7.483782e-02 -1.275061e-01\n47  -0.03473321 -6.492968e-02  1.387668e-01  7.573159e-02 -1.264827e-01\n48  -0.03547222 -6.631116e-02  1.252044e-01  7.662536e-02 -1.254593e-01\n49  -0.03621122 -6.769264e-02  1.116420e-01  7.751913e-02 -1.244358e-01\n50  -0.03695022 -6.907413e-02  9.807961e-02  7.841290e-02 -1.234124e-01\n51  -0.03768923 -7.045561e-02  8.451722e-02  7.930667e-02 -1.223890e-01\n52  -0.03842823 -7.183709e-02  7.095484e-02  8.020045e-02 -1.213656e-01\n53  -0.03916724 -7.321857e-02  5.739246e-02  8.109422e-02 -1.203421e-01\n54  -0.03990624 -7.460006e-02  4.383008e-02  8.198799e-02 -1.193187e-01\n55  -0.04064525 -7.598154e-02  3.026769e-02  8.288176e-02 -1.182953e-01\n56  -0.04138425 -7.736302e-02  1.670531e-02  8.377553e-02 -1.172718e-01\n57  -0.04212326 -7.874450e-02  3.142930e-03  8.466930e-02 -1.162484e-01\n58  -0.04286226 -8.012599e-02 -1.041945e-02  8.556307e-02 -1.152250e-01\n59  -0.04360127 -8.150747e-02 -2.398184e-02  8.645684e-02 -1.142015e-01\n60  -0.04434027 -8.288895e-02 -3.754422e-02  8.735061e-02 -1.131781e-01\n61  -0.04507927 -8.427044e-02 -5.110660e-02  8.824438e-02 -1.121547e-01\n62  -0.04581828 -8.565192e-02 -6.466898e-02  8.913815e-02 -1.111313e-01\n63  -0.04655728 -8.703340e-02 -7.823137e-02  9.003192e-02 -1.101078e-01\n64  -0.04729629 -8.841488e-02 -9.179375e-02  9.092569e-02 -1.090844e-01\n65  -0.04803529 -8.979637e-02 -1.053561e-01  9.181946e-02 -1.080610e-01\n66  -0.04877430 -9.117785e-02 -1.189185e-01  9.271323e-02 -1.070375e-01\n67   0.15230514  1.252536e-02  1.229648e-01 -1.080724e-01 -1.237505e-01\n68   0.15156613  1.114388e-02  1.094024e-01 -1.071786e-01 -1.227271e-01\n69   0.15082713  9.762397e-03  9.584006e-02 -1.062848e-01 -1.217036e-01\n70   0.15008812  8.380915e-03  8.227768e-02 -1.053911e-01 -1.206802e-01\n71   0.14934912  6.999432e-03  6.871529e-02 -1.044973e-01 -1.196568e-01\n72   0.14861011  5.617950e-03  5.515291e-02 -1.036035e-01 -1.186333e-01\n73   0.14787111  4.236467e-03  4.159053e-02 -1.027098e-01 -1.176099e-01\n74   0.14713211  2.854985e-03  2.802815e-02 -1.018160e-01 -1.165865e-01\n75   0.14639310  1.473502e-03  1.446576e-02 -1.009222e-01 -1.155630e-01\n76   0.14565410  9.201967e-05  9.033816e-04 -1.000284e-01 -1.145396e-01\n77   0.14491509 -1.289463e-03 -1.265900e-02 -9.913468e-02 -1.135162e-01\n78   0.14417609 -2.670945e-03 -2.622138e-02 -9.824091e-02 -1.124928e-01\n79   0.14343708 -4.052428e-03 -3.978377e-02 -9.734714e-02 -1.114693e-01\n80   0.14269808 -5.433911e-03 -5.334615e-02 -9.645337e-02 -1.104459e-01\n81   0.14195907 -6.815393e-03 -6.690853e-02 -9.555959e-02 -1.094225e-01\n82   0.14122007 -8.196876e-03 -8.047091e-02 -9.466582e-02 -1.083990e-01\n83   0.14048107 -9.578358e-03 -9.403330e-02 -9.377205e-02 -1.073756e-01\n84   0.13974206 -1.095984e-02 -1.075957e-01 -9.287828e-02 -1.063522e-01\n85   0.13900306 -1.234132e-02 -1.211581e-01 -9.198451e-02 -1.053287e-01\n86   0.13826405 -1.372281e-02 -1.347204e-01 -9.109074e-02 -1.043053e-01\n87   0.13752505 -1.510429e-02 -1.482828e-01 -9.019697e-02 -1.032819e-01\n88   0.13678604 -1.648577e-02 -1.618452e-01 -8.930320e-02 -1.022585e-01\n89  -0.01699710  1.434267e-01  1.221167e-01 -1.093263e-01 -1.858597e-02\n90  -0.01773611  1.420452e-01  1.085543e-01 -1.084325e-01 -1.756254e-02\n91  -0.01847511  1.406637e-01  9.499189e-02 -1.075388e-01 -1.653911e-02\n92  -0.01921412  1.392822e-01  8.142951e-02 -1.066450e-01 -1.551568e-02\n93  -0.01995312  1.379007e-01  6.786712e-02 -1.057512e-01 -1.449225e-02\n94  -0.02069213  1.365193e-01  5.430474e-02 -1.048575e-01 -1.346882e-02\n95  -0.02143113  1.351378e-01  4.074236e-02 -1.039637e-01 -1.244539e-02\n96  -0.02217013  1.337563e-01  2.717998e-02 -1.030699e-01 -1.142196e-02\n97  -0.02290914  1.323748e-01  1.361759e-02 -1.021761e-01 -1.039853e-02\n98  -0.02364814  1.309933e-01  5.521131e-05 -1.012824e-01 -9.375099e-03\n99  -0.02438715  1.296118e-01 -1.350717e-02 -1.003886e-01 -8.351669e-03\n100 -0.02512615  1.282304e-01 -2.706955e-02 -9.949484e-02 -7.328239e-03\n101 -0.02586516  1.268489e-01 -4.063194e-02 -9.860107e-02 -6.304809e-03\n102 -0.02660416  1.254674e-01 -5.419432e-02 -9.770729e-02 -5.281379e-03\n103 -0.02734317  1.240859e-01 -6.775670e-02 -9.681352e-02 -4.257949e-03\n104 -0.02808217  1.227044e-01 -8.131908e-02 -9.591975e-02 -3.234519e-03\n105 -0.02882118  1.213229e-01 -9.488147e-02 -9.502598e-02 -2.211088e-03\n106 -0.02956018  1.199415e-01 -1.084438e-01 -9.413221e-02 -1.187658e-03\n107 -0.03029918  1.185600e-01 -1.220062e-01 -9.323844e-02 -1.642284e-04\n108 -0.03103819  1.171785e-01 -1.355686e-01 -9.234467e-02  8.592017e-04\n109 -0.03177719  1.157970e-01 -1.491310e-01 -9.145090e-02  1.882632e-03\n110 -0.03251620  1.144155e-01 -1.626934e-01 -9.055713e-02  2.906062e-03\n111 -0.03325520 -6.216671e-02  1.658915e-01 -1.001336e-01  9.854069e-02\n112 -0.03399421 -6.354820e-02  1.523291e-01 -9.923983e-02  9.956412e-02\n113 -0.03473321 -6.492968e-02  1.387668e-01 -9.834606e-02  1.005875e-01\n114 -0.03547222 -6.631116e-02  1.252044e-01 -9.745229e-02  1.016110e-01\n115 -0.03621122 -6.769264e-02  1.116420e-01 -9.655852e-02  1.026344e-01\n116 -0.03695022 -6.907413e-02  9.807961e-02 -9.566475e-02  1.036578e-01\n117 -0.03768923 -7.045561e-02  8.451722e-02 -9.477098e-02  1.046813e-01\n118 -0.03842823 -7.183709e-02  7.095484e-02 -9.387721e-02  1.057047e-01\n119 -0.03916724 -7.321857e-02  5.739246e-02 -9.298344e-02  1.067281e-01\n120 -0.03990624 -7.460006e-02  4.383008e-02 -9.208967e-02  1.077516e-01\n121 -0.04064525 -7.598154e-02  3.026769e-02 -9.119590e-02  1.087750e-01\n122 -0.04138425 -7.736302e-02  1.670531e-02 -9.030213e-02  1.097984e-01\n123 -0.04212326 -7.874450e-02  3.142930e-03 -8.940836e-02  1.108218e-01\n124 -0.04286226 -8.012599e-02 -1.041945e-02 -8.851459e-02  1.118453e-01\n125 -0.04360127 -8.150747e-02 -2.398184e-02 -8.762082e-02  1.128687e-01\n126 -0.04434027 -8.288895e-02 -3.754422e-02 -8.672705e-02  1.138921e-01\n127 -0.04507927 -8.427044e-02 -5.110660e-02 -8.583328e-02  1.149156e-01\n128 -0.04581828 -8.565192e-02 -6.466898e-02 -8.493951e-02  1.159390e-01\n129 -0.04655728 -8.703340e-02 -7.823137e-02 -8.404574e-02  1.169624e-01\n130 -0.04729629 -8.841488e-02 -9.179375e-02 -8.315197e-02  1.179859e-01\n131 -0.04803529 -8.979637e-02 -1.053561e-01 -8.225820e-02  1.190093e-01\n132 -0.04877430 -9.117785e-02 -1.189185e-01 -8.136443e-02  1.200327e-01\n    group#2:test1\n2    2.650467e-17\n3    8.205484e-16\n4   -4.084221e-16\n5    3.960481e-16\n6    4.690416e+00\n7   -8.124038e+00\n8    4.420540e-02\n9    4.475215e-02\n10   4.529891e-02\n11   4.584566e-02\n12   4.639242e-02\n13   4.693917e-02\n14   4.748593e-02\n15   4.803269e-02\n16   4.857944e-02\n17   4.912620e-02\n18   4.967295e-02\n19   5.021971e-02\n20   5.076646e-02\n21   5.131322e-02\n22   5.185997e-02\n23  -1.404305e-01\n24  -1.398837e-01\n25  -1.393370e-01\n26  -1.387902e-01\n27  -1.382434e-01\n28  -1.376967e-01\n29  -1.371499e-01\n30  -1.366032e-01\n31  -1.360564e-01\n32  -1.355097e-01\n33  -1.349629e-01\n34  -1.344162e-01\n35  -1.338694e-01\n36  -1.333226e-01\n37  -1.327759e-01\n38  -1.322291e-01\n39  -1.316824e-01\n40  -1.311356e-01\n41  -1.305889e-01\n42  -1.300421e-01\n43  -1.294954e-01\n44  -1.289486e-01\n45   5.442606e-02\n46   5.497282e-02\n47   5.551957e-02\n48   5.606633e-02\n49   5.661309e-02\n50   5.715984e-02\n51   5.770660e-02\n52   5.825335e-02\n53   5.880011e-02\n54   5.934686e-02\n55   5.989362e-02\n56   6.044038e-02\n57   6.098713e-02\n58   6.153389e-02\n59   6.208064e-02\n60   6.262740e-02\n61   6.317415e-02\n62   6.372091e-02\n63   6.426766e-02\n64   6.481442e-02\n65   6.536118e-02\n66   6.590793e-02\n67  -6.611226e-02\n68  -6.556551e-02\n69  -6.501875e-02\n70  -6.447199e-02\n71  -6.392524e-02\n72  -6.337848e-02\n73  -6.283173e-02\n74  -6.228497e-02\n75  -6.173822e-02\n76  -6.119146e-02\n77  -6.064471e-02\n78  -6.009795e-02\n79  -5.955119e-02\n80  -5.900444e-02\n81  -5.845768e-02\n82  -5.791093e-02\n83  -5.736417e-02\n84  -5.681742e-02\n85  -5.627066e-02\n86  -5.572391e-02\n87  -5.517715e-02\n88  -5.463039e-02\n89   1.131622e-01\n90   1.137089e-01\n91   1.142557e-01\n92   1.148024e-01\n93   1.153492e-01\n94   1.158959e-01\n95   1.164427e-01\n96   1.169894e-01\n97   1.175362e-01\n98   1.180830e-01\n99   1.186297e-01\n100  1.191765e-01\n101  1.197232e-01\n102  1.202700e-01\n103  1.208167e-01\n104  1.213635e-01\n105  1.219102e-01\n106  1.224570e-01\n107  1.230038e-01\n108  1.235505e-01\n109  1.240973e-01\n110  1.246440e-01\n111 -7.044727e-02\n112 -6.990052e-02\n113 -6.935376e-02\n114 -6.880701e-02\n115 -6.826025e-02\n116 -6.771350e-02\n117 -6.716674e-02\n118 -6.661999e-02\n119 -6.607323e-02\n120 -6.552647e-02\n121 -6.497972e-02\n122 -6.443296e-02\n123 -6.388621e-02\n124 -6.333945e-02\n125 -6.279270e-02\n126 -6.224594e-02\n127 -6.169918e-02\n128 -6.115243e-02\n129 -6.060567e-02\n130 -6.005892e-02\n131 -5.951216e-02\n132 -5.896541e-02\nattr(,\"assign\")\n[1] 0 0 0 1 2 2\n\n$qraux\n[1] 1.151566 1.009762 1.082278 1.069580 1.080698 1.043659\n\n$pivot\n[1] 1 2 3 4 5 6\n\n$tol\n[1] 1e-07\n\n$rank\n[1] 6\n\nattr(,\"class\")\n[1] \"qr\"",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#anova-à-2-facteurs",
    "href": "np.html#anova-à-2-facteurs",
    "title": "Tests non paramétriques",
    "section": "ANOVA à 2 facteurs",
    "text": "ANOVA à 2 facteurs",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#groupes-indépendants",
    "href": "np.html#groupes-indépendants",
    "title": "Tests non paramétriques",
    "section": "Groupes indépendants",
    "text": "Groupes indépendants\nHettmansperger and McKean (2011) étudient l’effet de quatre drogues sur la réduction de cholesterol (LDL) chez les cailles. Attention les groupes sont déséquilibrées !\n\nAnalyses descriptives\nFaire les analyses descriptives\n\ndata(\"quail\")\nquail |&gt;\n  group_by(treat) |&gt;\n  summarise(M=mean(ldl),SD=sd(ldl),\n            Med=median(ldl),mad=mad(ldl))\n\n# A tibble: 4 × 5\n  treat     M    SD   Med   mad\n  &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 1      74.5  25.0  68.5 18.5 \n2 2      52.3  33.1  35    7.41\n3 3      73.8  37.7  62    8.15\n4 4      67.6  23.1  65   23.7 \n\nggplot(quail,aes(x=treat,y=ldl))+\n  geom_boxplot()",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#première-modélisation-anova-paramétrique",
    "href": "np.html#première-modélisation-anova-paramétrique",
    "title": "Tests non paramétriques",
    "section": "Première modélisation : ANOVA paramétrique",
    "text": "Première modélisation : ANOVA paramétrique\n\nmod=aov(ldl~treat,data=quail)\nlibrary(car)\nAnova(mod,type=\"III\")\n\nAnova Table (Type III tests)\n\nResponse: ldl\n            Sum Sq Df F value    Pr(&gt;F)    \n(Intercept)  55503  1 59.7050 4.519e-09 ***\ntreat         3189  3  1.1433    0.3451    \nResiduals    32536 35                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nPour ceux qui préfèrent les contrastes : on peut se dire que le deuxième traitement paraît réduire de façon plus efficace le ldl que les autres. On pourrait tester \\(H_0:\\mu_2=\\frac1{3}(\\mu_1+\\mu_3+\\mu_4)\\) versus \\(H_1:\\mu_2\\not =\\frac1{3}(\\mu_1+\\mu_3+\\mu_4)\\)\n\n# Estimation du modèle linéaire :\nmod=lm(ldl~treat,data=quail)\nH=as.matrix(c(-1/3,1,-1/3,-1/3))\n# Estimation de la différence des moyennes \nmod$coefficients%*%H\n\n          [,1]\n[1,] -44.48519\n\n# Estimation de l'erreur standard\nsqrt(diag(t(H)%*%vcov(mod)%*%H))\n\n[1] 12.49332\n\n# Calcul de la statistique de stats\nz=mod$coefficients%*%H/sqrt(diag(t(H)%*%vcov(mod)%*%H))\n# Calcul de la p-value\n2*(1-pnorm(abs(z)))\n\n             [,1]\n[1,] 0.0003698421",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#deuxième-modélisation-test-de-kw",
    "href": "np.html#deuxième-modélisation-test-de-kw",
    "title": "Tests non paramétriques",
    "section": "Deuxième modélisation : test de KW",
    "text": "Deuxième modélisation : test de KW\n\nkruskal_test(ldl~treat,data=quail)\n\n\n    Asymptotic Kruskal-Wallis Test\n\ndata:  ldl by treat (1, 2, 3, 4)\nchi-squared = 7.1879, df = 3, p-value = 0.06614",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#trosième-modélisation-permutation",
    "href": "np.html#trosième-modélisation-permutation",
    "title": "Tests non paramétriques",
    "section": "Trosième modélisation : permutation",
    "text": "Trosième modélisation : permutation\n\nlibrary(lmPerm)\nmod=aovp(ldl~treat,data=quail)\n\n[1] \"Settings:  unique SS \"\n\nAnova(mod,type=\"III\")\n\nAnova Table (Type III tests)\n\nResponse: ldl\n            Sum Sq Df  F value    Pr(&gt;F)    \n(Intercept) 174910  1 188.1536 1.209e-15 ***\ntreat         3189  3   1.1433    0.3451    \nResiduals    32536 35                       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#rm-anova",
    "href": "np.html#rm-anova",
    "title": "Tests non paramétriques",
    "section": "RM ANOVA",
    "text": "RM ANOVA\n\ndata(\"Friendly\")\ndata(\"OBrienKaiserLong\")\n\ntable(OBrienKaiserLong$phase)\n\n\n pre post  fup \n  80   80   80 \n\nboxplot(correct~condition,data=Friendly)\n\n\n\n\n\n\n\n\nTélécharger le fichier Baumann pour R ou le fichier BaumannW pour Jamovi.\n\nlibrary(readxl)\nBaumann=read_excel(\"Baumann.xlsx\")\n\nBaumann=Baumann |&gt;\n  mutate(test=factor(test,levels=c(\"pre\",\"pos\")),\n         type=factor(type))\n\nggplot(Baumann,aes(x=test,y=score))+\n  geom_boxplot()\n\n\n\n\n\n\n\nmod=lmer(score~test+(1|id),data=Baumann)\nanova(mod)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F)\ntest 0.18561 0.18561     1   197  0.0188  0.891",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#rm-anova-à-un-facteur",
    "href": "np.html#rm-anova-à-un-facteur",
    "title": "Tests non paramétriques",
    "section": "RM Anova à un facteur",
    "text": "RM Anova à un facteur\n\ndata(\"OBrienKaiserLong\")\nOBrienKaiserLong |&gt;\n  group_by(phase) |&gt;\n  summarise(M=mean(score),SD=sd(score),Med=median(score),\n            MAD=mad(score))\n\n# A tibble: 3 × 5\n  phase     M    SD   Med   MAD\n  &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 pre    4.38  1.87     4  1.48\n2 post   5.75  2.33     6  2.97\n3 fup    6.38  2.20     7  1.48\n\n# Pour ré-ordonner les facteurs de la variable phase\n\nOBrienKaiserLong=OBrienKaiserLong |&gt;\n  mutate(phase=factor(phase,levels=c(\"pre\",\"fup\",\"post\")))\n\nggplot(OBrienKaiserLong,aes(x=phase,y=score))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nlibrary(lmerTest)\n\nLoading required package: lme4\n\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'lmerTest'\n\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\n\nThe following object is masked from 'package:stats':\n\n    step\n\nmod=lmer(score~phase+(1|id),data=OBrienKaiserLong)\nanova(mod,type=3)\n\nType III Analysis of Variance Table with Satterthwaite's method\n      Sum Sq Mean Sq NumDF DenDF F value    Pr(&gt;F)    \nphase  167.5   83.75     2   222   38.48 4.487e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nlibrary(emmeans)\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\npostHoc=emmeans(mod,specs = ~phase)\npwpm(postHoc)\n\n        pre    fup   post\npre  [4.38] &lt;.0001 &lt;.0001\nfup  -2.000 [6.38] 0.0215\npost -1.375  0.625 [5.75]\n\nRow and column labels: phase\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\nOn peut aussi faire un contraste par exemple pour tester \\(H_0:\\mu_{pre}=\\frac 1{2}(\\mu_{fup}+\\mu_{post}).\\)\n\nmod1=summary(lmer(score~phase-1+(1|id),data=OBrienKaiserLong))\n## Pour l'estimation des moyennes :\nmoy=mod1$coefficients[,\"Estimate\"]\n## Pour l'estimation de la matrice de covariance\nmod1$vcov\n\n3 x 3 Matrix of class \"dpoMatrix\"\n           phasepre  phasefup phasepost\nphasepre  0.1857295 0.1585242 0.1585242\nphasefup  0.1585242 0.1857295 0.1585242\nphasepost 0.1585242 0.1585242 0.1857295\n\n\nA vous de jouer.\n\n\nShow the code\nH=as.matrix(c(-1,1/2,1/2))\n\n# Estimation de la différence de moyenne :\nM=moy%*%H\nprint(M)\n# Estimation de l'erreur standard :\nES=sqrt(diag(t(H)%*%mod1$vcov%*%H))\nprint(ES)\n# Estimation de la statistique de test :\nz=M/ES\nprint(z)\n# Estimation de la p-value\n2*(1-pnorm(abs(z)))\n\n\nOn peut aussi faire le test de Friedman :\n\nfriedman_test(score~phase,data=OBrienKaiserLong)\n\n\n    Asymptotic Friedman Test\n\ndata:  score by\n     phase (pre, fup, post) \n     stratified by block\nchi-squared = 36.312, df = 2, p-value = 1.303e-08\n\n\nou bien de la permutation :\n\nlibrary(permutes)\nmod=permutes::perm.lmer(score~phase,data=OBrienKaiserLong,\n                    type=\"anova\")\n\nLoading required namespace: buildmer\n\nmod\n\n       Factor df       LRT         F  p\n1 (Intercept)  1 396.96809 334.01404 NA\n2       phase  2  86.46743  18.26852  0",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#facteurs-indépendants",
    "href": "np.html#facteurs-indépendants",
    "title": "Tests non paramétriques",
    "section": "Facteurs indépendants",
    "text": "Facteurs indépendants\nOn\n\ndata(\"serumLH\")\nmod=rfit(serum~light.regime:LRF.dose-1,data=serumLH)\nvcov(mod)\n\n            [,1]       [,2]       [,3]       [,4]       [,5]       [,6]\n [1,] 521.280005  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423\n [2,]  -8.069423 521.280005  -8.069423  -8.069423  -8.069423  -8.069423\n [3,]  -8.069423  -8.069423 521.280005  -8.069423  -8.069423  -8.069423\n [4,]  -8.069423  -8.069423  -8.069423 521.280005  -8.069423  -8.069423\n [5,]  -8.069423  -8.069423  -8.069423  -8.069423 521.280005  -8.069423\n [6,]  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423 521.280005\n [7,]  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423\n [8,]  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423\n [9,]  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423\n[10,]  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423  -8.069423\n            [,7]       [,8]       [,9]      [,10]\n [1,]  -8.069423  -8.069423  -8.069423  -8.069423\n [2,]  -8.069423  -8.069423  -8.069423  -8.069423\n [3,]  -8.069423  -8.069423  -8.069423  -8.069423\n [4,]  -8.069423  -8.069423  -8.069423  -8.069423\n [5,]  -8.069423  -8.069423  -8.069423  -8.069423\n [6,]  -8.069423  -8.069423  -8.069423  -8.069423\n [7,] 521.280005  -8.069423  -8.069423  -8.069423\n [8,]  -8.069423 521.280005  -8.069423  -8.069423\n [9,]  -8.069423  -8.069423 521.280005  -8.069423\n[10,]  -8.069423  -8.069423  -8.069423 521.280005",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#anova-paramétrique",
    "href": "np.html#anova-paramétrique",
    "title": "Tests non paramétriques",
    "section": "Anova paramétrique",
    "text": "Anova paramétrique\n\nmod&lt;-lm(serum~LRF.dose*light.regime,data=serumLH)\nAnova(mod,type=\"III\")\n\nAnova Table (Type III tests)\n\nResponse: serum\n                      Sum Sq Df F value   Pr(&gt;F)   \n(Intercept)            21600  1  3.5874 0.064012 . \nLRF.dose              130294  4  5.4099 0.001065 **\nlight.regime            7600  1  1.2623 0.266585   \nLRF.dose:light.regime  55099  4  2.2877 0.072866 . \nResiduals             301055 50                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#anova-basée-sur-les-rangs",
    "href": "np.html#anova-basée-sur-les-rangs",
    "title": "Tests non paramétriques",
    "section": "Anova basée sur les rangs",
    "text": "Anova basée sur les rangs\n\nmod&lt;-raov(serum~LRF.dose*light.regime,data=serumLH)\nmod\n\n\nRobust ANOVA Table\n                      DF        RD   Mean RD        F p-value\nLRF.dose               4 3027.6735  756.9184 26.86162 0.00000\nlight.regime           1 1642.3333 1642.3333 58.28334 0.00000\nLRF.dose:light.regime  4  451.4553  112.8638  4.00533 0.00678\n\n\nOn veut faire des comparaisons de l’effet dose selon le type de régime (à vous !)\n\nmod=rfit(serum~LRF.dose:light.regime-1,data=serumLH)\n\n\n\nShow the code\nH=rbind(diag(c(1,1,1,1,1)),diag(c(-1,-1,-1,-1,-1)))\nD=mod$coefficients%*%H\nES=sqrt(diag(t(H)%*%vcov(mod)%*%H))\nz=D/ES\n2*(1-pnorm(abs(z)))\n\n\n          [,1]       [,2]         [,3]        [,4]         [,5]\n[1,] 0.1486039 0.01950028 2.918003e-05 6.16267e-10 7.369958e-10",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "np.html#reprendre-lexemple-précédent",
    "href": "np.html#reprendre-lexemple-précédent",
    "title": "Tests non paramétriques",
    "section": "Reprendre l’exemple précédent",
    "text": "Reprendre l’exemple précédent\nOn ajoute le facteur group à l’exemple Baumann. Faire les analyses nécessaires.",
    "crumbs": [
      "Tests non paramétriques"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Formation Statistique Nancy 2025",
    "section": "",
    "text": "Preface\nLes packages nécessaires pour suivre cette formation sont listés ci-dessous :\n\ninstall.packages(\n  c(\"ggplot2\",\"dplyr\",\"coin\",\"npsm\",\"lmPerm\",\"lmerTest\",\n    \"permutes\",\"emmeans\",\"BayesFactor\",\"bayestestR\",\"rstanarm\",\n    \"bayesplot\",\"bayestestR\"),\n  dependencies = T)\n\nMon site Web :\nsite Web",
    "crumbs": [
      "Preface"
    ]
  }
]